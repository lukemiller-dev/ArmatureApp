{"version":3,"sources":["app.js","environment.js","main.js","organization.js","resources/index.js","components/createOrg/createOrg.js","components/viewOrg/viewOrg.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","nav","messages","color","pStyle","emptyNav","sideNav","sideNavActive","sideNavI","mainPage","navHeaderActive","heading","heading2","heading3","organizations","orgName","orgAddress","orgAddress2","orgCity","orgState","orgZipCode","addOrg","push","console","log","orgAddess2","localStorage","setItem","JSON","stringify","retrievedData","getItem","organization2","parse","removeOrg","organization","index","indexOf","splice","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","Organization","address","address2","city","state","zipCode","CreateOrg","ViewOrg"],"mappings":";;;;;;;;;;;;;;MAMaA,cAAAA;kBAGXC,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOE,KAAP,GAAe,SAAf;;AAECF,aAAOG,GAAP,CAAW,CAEN,EAAEC,OAAO,CAAC,SAAD,EAAW,SAAX,CAAT,EAAiCC,MAAM,SAAvC;AACEC,kBAAU,8BADZ,EAC6CC,KAAK,IADlD,EACwDL,OAAM,mBAD9D,EAFM,EAIP,EAAEE,OAAO,WAAT,EAAuBC,MAAM,WAA7B;AACGC,kBAAU,kCADb,EACoDC,KAAK,IADzD,EAC+DL,OAAM,qBADrE,EAJO,CAAX;;AASC,WAAKD,MAAL,GAAcA,MAAd;AACH;;AAGE,mBAAc;AAAA;;AAAA,WA2CdO,QA3Cc,GA2CH;AACTC,eAAO,gBADE;AAET,qBAAa,OAFJ;AAGT,sBAAc;;AAHL,OA3CG;AAAA,WAkDdC,MAlDc,GAkDL;AACPD,eAAO,gBADA;AAEP,qBAAa,OAFN;AAGP,sBAAc,QAHP;AAIP,uBAAe,MAJR;AAKP,uBAAc;;AALP,OAlDK;AAAA,WA4DdE,QA5Dc,GA4DH;AACT,4BAAoB,MADX;AAET,kBAAU,OAFD;AAGT,iBAAS,MAHA;AAIT,yBAAiB;AAJR,OA5DG;AAAA,WAmEdC,OAnEc,GAmEJ;AACR,4BAAmB,MADX;;AAGP,kBAAU,MAHH;AAIP,iBAAS,OAJF;AAKP,sBAAa,MALN;AAMP,wBAAe,qBANR;AAOP,yBAAgB,qBAPT;AAQP,sBAAc,qBARP;AASP,mBAAU;AATH,OAnEI;AAAA,WA+EdC,aA/Ec,GA+EE;AACd,4BAAmB,kBADL;AAEd,kBAAU,MAFI;AAGb,iBAAS,OAHI;;AAKb,uBAAe,mBALF;;AAOb,mBAAU;AAPG,OA/EF;AAAA,WAyFhBC,QAzFgB,GAyFL;AACT,wBAAe;;AADN,OAzFK;AAAA,WA+FhBC,QA/FgB,GA+FL;AACT,kBAAU,OADD;AAET,iBAAQ,KAFC;AAGT,4BAAoB,OAHX;AAIT,sBAAa,MAJJ;AAKT,uBAAe,OALN;AAMT,kBAAU,qBAND;;AAQT,yBAAiB;AARR,OA/FK;AAAA,WA0GhBC,eA1GgB,GA0GE;AAChB,kBAAU,MADM;AAEhB,iBAAS,OAFO;AAGhB,4BAAoB,MAHJ;AAIhB,kBAAS,MAJO;AAKhB,uBAAe,qBALC;AAMjB,sBAAc,kBANG;AAOhB,wBAAgB,MAPA;AAQhB,mBAAU;;AARM,OA1GF;;AACX,WAAKC,OAAL,GAAe,mBAAf;AACA,WAAKC,QAAL,GAAe,qBAAf;AACA,WAAKC,QAAL,GAAgB,oBAAhB;AACA,WAAKC,aAAL,GAAqB,EAArB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,WAAL,GAAmB,EAAnB;AACA,WAAKC,OAAL,GAAe,EAAf;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AAIF;;kBAGDC,2BAAS;AACL,UAAG,KAAKN,OAAR,EAAiB;AACb,aAAKD,aAAL,CAAmBQ,IAAnB,CAAwB,+BAAiB,KAAKP,OAAtB,EAA+B,KAAKC,UAApC,EAAgD,KAAKC,WAArD,EAAkE,KAAKC,OAAvE,EAAgF,KAAKC,QAArF,EAA+F,KAAKC,UAApG,CAAxB;AACCG,gBAAQC,GAAR,CAAY,KAAKV,aAAjB;AACD,aAAKC,OAAL,GAAe,EAAf;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKS,UAAL,GAAkB,EAAlB;AACA,aAAKP,OAAL,GAAe,EAAf;AACA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACH;AACA,UAAIN,gBAAgB,KAAKA,aAAzB;AACAY,mBAAaC,OAAb,CAAqB,eAArB,EAAsCC,KAAKC,SAAL,CAAef,aAAf,CAAtC;AACE,UAAIgB,gBAAgBJ,aAAaK,OAAb,CAAqB,eAArB,CAApB;AACC,UAAIC,gBAAgBJ,KAAKK,KAAL,CAAWH,aAAX,CAApB;AACP;;kBAIDI,+BAAUC,cAAc;AACpB,UAAIC,QAAQ,KAAKtB,aAAL,CAAmBuB,OAAnB,CAA2BF,YAA3B,CAAZ;AACA,UAAGC,UAAU,CAAC,CAAd,EAAiB;AACb,aAAKtB,aAAL,CAAmBwB,MAAnB,CAA0BF,KAA1B,EAAiC,CAAjC;AACH;AACJ;;;;;;;;;;;oBClES;AACbG,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQhD,MAAR,CAAe;AACbiD,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYT,KAAhB,EAAuB;AACrBM,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYT,OAAhB,EAAyB;AACvBK,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;QCvBYC,uBAAAA,eACT,sBAAYvD,IAAZ,EAAkBwD,OAAlB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,KAA3C,EAAkDC,OAAlD,EAA2D;AAAA;;AACvD,aAAK5D,IAAL,GAAYA,IAAZ;AACA,aAAKwD,OAAL,GAAeA,OAAf;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,KAAL,GAAaA,KAAb;AACA,aAAKC,OAAL,GAAeA,OAAf;AAEH;;;;;;;;UCTWlB,YAAAA;AAAT,WAASA,SAAT,CAAmB/C,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;QCCYkE,oBAAAA;;;;;;;;;;;;;;;;;MCAAC,kBAAAA","file":"app-bundle.js","sourcesContent":["import {Organization} from './organization';\nimport {CreateOrg} from './components/createOrg/createOrg';\nimport {ViewOrg} from './components/viewOrg/viewOrg';\nimport {inject} from 'aurelia-framework';\n\n\nexport class App {\n\n//Routes\n  configureRouter(config, router) {\n    config.title = 'Aurelia';\n\n     config.map([\n\n          { route: ['viewOrg','viewOrg'],  name: 'viewOrg',  \n            moduleId: './components/viewOrg/viewOrg',  nav: true, title:'View Organization' },\n         { route: 'createOrg',  name: 'createOrg',\n            moduleId: './components/createOrg/createOrg',    nav: true, title:'Create Organization' }\n       \n      ]);\n\n      this.router = router;\n  }\n\n//AddNRemoveOrg\n     constructor() {\n        this.heading = \"View Organization\";\n        this.heading2 =\"Create Organization\";\n        this.heading3 = \"View Organization2\";\n        this.organizations = [];\n        this.orgName = '';\n        this.orgAddress = '';\n        this.orgAddress2 = '';\n        this.orgCity = '';\n        this.orgState = '';\n        this.orgZipCode = '';\n\n\n           \n     }\n\n\n     addOrg() {\n         if(this.orgName) {\n             this.organizations.push(new Organization(this.orgName, this.orgAddress, this.orgAddress2, this.orgCity, this.orgState, this.orgZipCode));\n              console.log(this.organizations);\n             this.orgName = '';\n             this.orgAddress = '';\n             this.orgAddess2 = '';\n             this.orgCity = '';\n             this.orgState = '';\n             this.orgZipCode = '';                   \n         }       \n          let organizations = this.organizations;\n          localStorage.setItem(\"organizations\", JSON.stringify(organizations));\n            let retrievedData = localStorage.getItem(\"organizations\");\n             var organization2 = JSON.parse(retrievedData);  \n     }\n\n    \n    \n     removeOrg(organization) {\n         let index = this.organizations.indexOf(organization);\n         if(index !== -1) {\n             this.organizations.splice(index, 1);\n         }\n     } \n\n     messages = {\n       color: 'lightslategray',\n       'font-size': '1.2em',\n       'text-align': 'center'\n    \n     }\n\n     pStyle = {\n       color: 'lightslategray',\n       'font-size': '1.2em',\n       'text-align': 'center',\n       'padding-top': '12px',\n       'font-family':'arial',\n      \n     }; \n\n\n     emptyNav = {\n       'background-color': '#fff',\n       'height': '110px',\n       'width': '100%',\n       'border-bottom': '1px solid lightgray'\n     };\n\n     sideNav = {\n       'background-color':'#fff',\n       \n        'height': '50px',\n        'width': '200px',\n        'margin-top':'-1px',\n        'border-right':'1px solid lightgray',\n        'border-bottom':'1px solid lightgray',\n        'border-top': '1px solid lightgray' ,\n        'display':'block'  \n     }; \n\n     sideNavActive = {\n       'background-color':'rgb(243,243,243)',\n       'height': '50px',\n        'width': '200px',\n      \n        'border-left': '4px solid #8BC34A',\n\n        'display':'block'\n     };\n\n   sideNavI = {\n     'margin-right':'10px',\n     \n   };\n\n   //View Org \n   mainPage = {\n     'height': '500px',\n     'width':'80%',\n     'background-color': 'white',\n     'margin-top':'20px',\n     'margin-left': '-30px',\n     'border': '1px solid lightgray',\n  \n     'border-radius': '3px'\n   }\n\n   navHeaderActive = {\n     'height': '50px',\n     'width': '150px',\n     'background-color': '#fff',\n     'border':'none',\n     'border-left': '2px solid lightgray',\n    'box-shadow': '0 10px lightgray',\n     'margin-right': '20px',\n     'outline':'none'\n\n   }    \n}\n\n\n\n \n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Organization {\r\n    constructor(name, address, address2, city, state, zipCode) {\r\n        this.name = name;\r\n        this.address = address;\r\n        this.address2 = address2;\r\n        this.city = city;\r\n        this.state = state;\r\n        this.zipCode = zipCode;\r\n        \r\n    }\r\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n","\r\n\r\n\r\nexport class CreateOrg {\r\n    \r\n    \r\n}","\r\n\r\n\r\nexport class ViewOrg {\r\n \r\n}"],"sourceRoot":".."}